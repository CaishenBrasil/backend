volumes:
    app-db-data:
    elasticsearch_data:

services:
    traefik:
        image: traefik:v2.5
        command:
            - "--log.level=DEBUG"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.http.address=:80"
        restart: always
        ports:
            - "8000:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)"
    db:
        image: postgres:13-alpine
        expose:
            - 5432
        volumes:
            - app-db-data:/var/lib/postgresql/data/pgdata
        env_file:
            - .env
        environment:
            PGDATA: /var/lib/postgresql/data/pgdata
    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - db
        env_file:
            - .env
        expose:
            - 80
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.pgadmin.entrypoints=http"
            - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
    redis:
        image: redis:alpine
        expose:
            - 6379
        env_file:
            - .env
    elasticsearch:
        image: elasticsearch:7.11.1
        environment:
            - discovery.type=single-node
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        mem_limit: "1g"
    logstash_agent:
        image: logstash:7.11.1
        volumes:
            - ./logstash:/etc/logstash
        command: logstash -f /etc/logstash/agent.conf
        depends_on:
            - elasticsearch
        ports:
            - 12201:12201/udp
    logstash_central:
        image: logstash:7.11.1
        volumes:
            - ./logstash:/etc/logstash
        command: logstash -f /etc/logstash/central.conf
        depends_on:
            - elasticsearch
    kibana:
        image: kibana:7.11.1
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.kibana.entrypoints=http"
            - "traefik.http.routers.kibana.rule=Host(`kibana.localhost`)"
    web:
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            APP_MODULE: api.main:app
            PRE_START_PATH: scripts/prestart.sh
            GUNICORN_CONF: gunicorn_config.py
            GUNICORN_CMD_ARGS: "--logger-class gunicorn_config.GunicornLogger"
        depends_on:
            - db
            - redis
            - logstash_agent
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.fastapi.entrypoints=http"
            - "traefik.http.routers.fastapi.rule=Host(`localhost`)"
        logging:
            driver: gelf
            options:
                gelf-address: "udp://localhost:12201" # Logstash UDP input port
                tag: "caishenapp"
